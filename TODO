IDEE : si on répondais aussi sur le patern "test-mysql" , on pourrai répondre tout le temps et quand le serveur tombe en panne : ca fallback sur le resolveur interne de docker (zero downtime et on n'aurai pas a modifié les config)
attention il faut bien faire du round robin pour respecté le fonctionnement de base de docker


-----------------
pb dans customdns :

ss -x -a  | grep helper
ss -x -a  | grep docker

les connexion sont pas fermés

+ on a des connexion refuse (qui font qu'on na pas tjr les host alive alors qu'il le sont)

--------


- on pourrais limité peut etre les down si on avait 2 service dnsHelper (et deux socket), comme ca pendant l integration a un network .. si l un repond pas , on prend l autre


- si un container du swarm interroge 172.17.0.1 , via tasksActive. il a acces a tout les service name du swarm qui sont interrogé , c est problematique
==> solution : il faudrais regarder la "source" de la requete dns , regarder les relations et autorisé que les network communs
- avoir un tasksActive.all/[node1/2/3].service plutot
- pouvoir specifié une URL de configuration pour le test de filtrage (sql/keydb/autre?) ca serai du php
- documenter comment utiliser le customdns dans les containers
- donner une priorité aux containers qui ont un network commun
- enlever les variable globale les encapsulé dans ServerExtended
- SI on demande un service qui n'existe pas, renvoyer une erreur NXDOMAIN not exist
