# docker run -it --rm --name customdns -p 172.17.0.1:53:53/udp davidnurdin/customdns
volumes:
  socketShare:

networks:
  test-network:
  helper:
  host:
    name: "host"
    external: true


services:
    test-service:
        image: debian:latest
        command: ["sh", "-c", "apt-get update && apt-get install -y netcat-traditional && while true; do if [ $$((RANDOM % 2)) -eq 0 ]; then echo 'AAAAAAAAAAAAAAAAAAAAAAAA'; fi | nc -l -p 3306; done"]
        networks:
          - test-network
        ports:
          - "3306"
        deploy:
          replicas: 3
          restart_policy:
              condition: on-failure

    dns-helper:
      image: debian:stable-slim
      entrypoint: ["/bin/bash"]
      command:
        - "-eucx"
        - |
          apt-get update
          apt-get install -y socat microsocks
          rm -f /var/run/dns-helper/helper.sock
          microsocks -p 1080 -i 127.0.0.1 &
          exec socat UNIX-LISTEN:/var/run/dns-helper/helper.sock,fork TCP:127.0.0.1:1080
      networks:
        - helper
      volumes:
        - socketShare:/var/run/dns-helper
      deploy:
        mode: global  # un container par host

    customdns:
        image: davidnurdin/customdns:latest
        entrypoint: [ "/bin/bash" ]
        command:
          - "-eucx"
          - |
            apt-get update
            apt-get install -y socat
            socat TCP4-LISTEN:9998,bind=127.0.0.1,fork UNIX-CONNECT:/var/run/dns-helper/helper.sock &
            exec /usr/local/bin/php start.php 172.17.0.1
        volumes:
          - type: bind
            source: /var/run/docker.sock
            target: /var/run/docker.sock
          - socketShare:/var/run/dns-helper
        networks:
          - host
        deploy:
          mode: global  # un container par host
          restart_policy:
            condition: any
