# docker run -it --rm --name customdns -p 172.17.0.1:53:53/udp davidnurdin/customdns
volumes:
  socketShare:

networks:
  test-network-mysql:
  helper:
  host:
    name: "host"
    external: true


services:
    test-web:
      # to test : dig tasksActive.all.dns_test-mysql
      image: debian:latest
      networks:
        - test-network-mysql
      entrypoint: ["/bin/bash"]
      command:
        - "-eucx"
        - |
          printf 'nameserver 172.17.0.1\nnameserver 127.0.0.11\nsearch .\noptions ndots:0\n' > /etc/resolv.conf
          apt-get update
          apt-get install -y procps telnet dnsutils inetutils-ping
          exec sleep infinity
      deploy:
        placement:
          max_replicas_per_node: 1
        replicas: 3
        restart_policy:
          condition: on-failure
    test-web2:
      # to test : dig tasksActive.all.dns_test-mysql
      image: debian:latest
      networks:
        - test-network-mysql
      entrypoint: ["/bin/bash"]
      command:
        - "-eucx"
        - |
          printf 'nameserver 172.17.0.1\nnameserver 127.0.0.11\nsearch .\noptions ndots:0\n' > /etc/resolv.conf
          apt-get update
          apt-get install -y procps telnet dnsutils inetutils-ping
          exec sleep infinity
      deploy:
        placement:
          max_replicas_per_node: 1
        replicas: 3
        restart_policy:
          condition: on-failure
    test-mysql:
        image: debian:latest
        entrypoint: ["/bin/bash"]
        command:
         - "-eucx"
         - |
           apt-get update
           apt-get install -y socat
           socat -v TCP-LISTEN:3306,fork,reuseaddr EXEC:'echo AAAAAAAAAAAAAAAAAAAAAAAA;'
        networks:
          - test-network-mysql
        ports:
          - "3306"
        deploy:
          placement:
            max_replicas_per_node: 1
          replicas: 3
          restart_policy:
              condition: on-failure
    dns-helper:
      image: davidnurdin/dns-helper:latest
      volumes:
        - socketShare:/var/run/dns-helper
      deploy:
        mode: global

    customdns1:
        image: davidnurdin/customdns:latest
        volumes:
          - type: bind
            source: /var/run/docker.sock
            target: /var/run/docker.sock
          - socketShare:/var/run/dns-helper
          # only in dev !
          - ./start.php:/app/start.php
        networks:
          - host
        deploy:
          mode: global  # un container par host
          restart_policy:
            condition: any

    customdns2:
      image: davidnurdin/customdns
      # Fallback
      command: [ "start.php","172.17.0.1","53","300","2" ]
      volumes:
        - type: bind
          source: /var/run/docker.sock
          target: /var/run/docker.sock
        - socketShare:/var/run/dns-helper
        # only in dev !
        - ./start.php:/app/start.php
      networks:
        - host
      deploy:
        mode: global  # un container par host
        restart_policy:
          condition: any

